ECMAscript6
  在chrome要用用use strict才能用
  let声明变量
    1、let不允许重复声明
    2、没有预解析
    3、块级作用域
  const声明常量
    1、之后操作不能改变他的值
    2、如果声明的对象的值是可以修改的

变量的解构赋值
    解构赋值：允许从数组和对象中提取值，对变量进行赋值，这被称为解构

    数组的解构:按照对应的顺序解构

    对象的解构：按名对应 

    用处：方便我们对数据进行获取，做值的交换

字符串的扩展：
   str.repeat(num) 复制字符串
   模板字符串：反引号(1按键旁边)，${变量}，例如：`你的名字是${name}`

   str.includes() 返回布尔值,是否含有某字符串
   str.startswith() 头部是否有某字符
   str.endswith() 尾部是否含有某字符

数值扩展：
   Math.trunc(num) 与parseInt()差不多
   Math.sign() 判断参数是正数还是负数
   Math.hypot()
   返回所有参数的平方和的平方

数组的扩展：
   Array.from()
      用于将类数组对象转换成为真正的数组
   Array.of()
      用于将一组参数，转换成数组
   arr.find()
      找出第一个符合条件的数组元素,返回正在遍历的元素
   arr.findIndex()
      找出第一个符合条件的数组元素，返回下标
   arr.fill(元素，起始位置，结束位置)
      填充数组

for:
   for of  遍历
   使用方法：
     for(var value of arr){
     console.log(value)
     }
   可以遍历数组和字符串，不可以直接遍历对象

   for(var value of arr.values()){
     console.log(value)   //value值的遍历
   }
   
   for(var key of arr.keys()){
      console.log(key)
   }

   for(var [key,value] of arr.entries()){
     console.log(key,value) //值和序号同时遍历
   }

数组推导：
   在原来数组的基础上乘以2
  var arr=[for(value of arr) value *2]

对象扩展：
   function(x,y){
     x++;
     y++;
     return {
        x:x,
        y:y
     }
   }
在es6里可以直接return{x,y}就可以了
   var obj={
      name:"xu",
      showName:function(){
           return this.name;
         }
      }
在es6里可以直接
   var obj={
      name:"xu",
      showName(){
           return this.name;
      }
   }

   在es6属性名：可以是运行后的值，把他放在方括号里面就可以了。
